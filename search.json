[
  {
    "objectID": "05_the_rest.html",
    "href": "05_the_rest.html",
    "title": "The rest of the glyphs",
    "section": "",
    "text": "]box on -style=max -trains=tree -fns=on\n\n┌→─────────────────────────────────────┐\n│Was ON -style=max -trains=tree -fns=on│\n└──────────────────────────────────────┘"
  },
  {
    "objectID": "05_the_rest.html#sets-and-stuff",
    "href": "05_the_rest.html#sets-and-stuff",
    "title": "The rest of the glyphs",
    "section": "Sets and stuff",
    "text": "Sets and stuff\n\n∊ (Epsilon)\n\nmonadic ∊ (Enlist)\n\n⎕←mat←2 3⍴⍳6\n\n┌→────┐\n↓1 2 3│\n│4 5 6│\n└~────┘\n\n\n\n\n∊ 0 mat (7 8) 'nine'\n\n┌→─────────────────────┐\n│0 1 2 3 4 5 6 7 8 nine│\n└+─────────────────────┘\n\n\n\n\n\ndyadic ∊ (Member of)\n\n'abc' 4 ∊ 4 'ab' 'abcd'\n\n┌→──┐\n│0 1│\n└~──┘\n\n\n\n\nmat←2 3⍴⍳6\nmat ∊ 6 2 7 4\n\n┌→────┐\n↓0 1 0│\n│1 0 1│\n└~────┘\n\n\n\n\n\n\n⍷ (Epsilon Underbar)\n\ndyadic ⍷ (Find)\n\n1 ⍷ 3 1 4 1 5 9 2\n\n┌→────────────┐\n│0 1 0 1 0 0 0│\n└~────────────┘\n\n\n\n\n1 4 ⍷ 3 1 4 1 5 9 2\n\n┌→────────────┐\n│0 1 0 0 0 0 0│\n└~────────────┘\n\n\n\n\n'ana' ⍷ 'Banana'\n\n┌→──────────┐\n│0 1 0 1 0 0│\n└~──────────┘\n\n\n\n\nX ← 2 2 ⍴ 0 1 1 0\nY ← 4 4 ⍴ 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0\nX Y\n\n┌→────────────────┐\n│ ┌→──┐ ┌→──────┐ │\n│ ↓0 1│ ↓0 1 0 0│ │\n│ │1 0│ │1 0 0 1│ │\n│ └~──┘ │0 0 1 0│ │\n│       │0 1 0 0│ │\n│       └~──────┘ │\n└∊────────────────┘\n\n\n\n\nX ⍷ Y\n\n┌→──────┐\n↓1 0 0 0│\n│0 0 1 0│\n│0 1 0 0│\n│0 0 0 0│\n└~──────┘\n\n\n\n\n\n\n∩ (Up shoe)\n\ndyadic ∩ (Intersection)\n\n'ABRA'∩'CAR'\n\n┌→──┐\n│ARA│\n└───┘\n\n\n\n\n22 'ab' 'fg' ∩ 'a' 'ab' 22\n\n┌→────────┐\n│    ┌→─┐ │\n│ 22 │ab│ │\n│    └──┘ │\n└∊────────┘\n\n\n\n\n\n\n∪ (Down shoe)\n\nmonadic ∪ (Unique)\n\na ← 2 3 4 2 3 4 5\n\n\n∪a\n\n┌→──────┐\n│2 3 4 5│\n└~──────┘\n\n\n\n\n(≠a)/a\n\n┌→──────┐\n│2 3 4 5│\n└~──────┘\n\n\n\n\n∪ 'ab' 'ba' 'ab' 1 1 2\n\n┌→──────────────┐\n│ ┌→─┐ ┌→─┐     │\n│ │ab│ │ba│ 1 2 │\n│ └──┘ └──┘     │\n└∊──────────────┘\n\n\n\n\n\ndyadic ∪ (Union)\n\n'ABRA'∪'CAR'\n\n┌→────┐\n│ABRAC│\n└─────┘\n\n\n\n\n22 'ab' 'fg' ∪ 'a' 'ab' 22\n\n┌→───────────────┐\n│    ┌→─┐ ┌→─┐   │\n│ 22 │ab│ │fg│ a │\n│    └──┘ └──┘ - │\n└∊───────────────┘"
  },
  {
    "objectID": "05_the_rest.html#sort-index",
    "href": "05_the_rest.html#sort-index",
    "title": "The rest of the glyphs",
    "section": "Sort / index",
    "text": "Sort / index\n\n⌷ (Squad)\n\nmonadic ⌷ (Materialise)\nFor ⌷ ⍵: If ⍵ is an array, returns ⍵. For a class/COM/.Net object, it materialises the items.\n\n\ndyadic ⌷ (Index)\n\nv ← 2×⍳12\n3⌷v\n\n \n6\n \n\n\n\n\n(⊂3 5) ⌷v\n\n┌→───┐\n│6 10│\n└~───┘\n\n\n\n\n⎕ ← mat ← 3 4 ⍴⍳12\n\n┌→─────────┐\n↓1  2  3  4│\n│5  6  7  8│\n│9 10 11 12│\n└~─────────┘\n\n\n\n\n2 3 ⌷ mat\n\n \n7\n \n\n\n\n\n\n\n⍒ (Grade Down)\n\nmonadic ⍒ (Grade Down)\n\n⍒ 33 11 44 66 22\n\n┌→────────┐\n│4 3 1 5 2│\n└~────────┘\n\n\n\n\na ← 33 11 44 66 22\n\n\na[⍒a]\n\n┌→─────────────┐\n│66 44 33 22 11│\n└~─────────────┘\n\n\n\n\na⌷⍨⊂⍒a\n\n┌→─────────────┐\n│66 44 33 22 11│\n└~─────────────┘\n\n\n\n{⍵[⍋⍵]} and {(⊂⍋⍵)⌷⍵} are sort idioms (special cased for performance)\n\nsort ← ⌷⍨∘⊂∘⍒⍨\n\n\nsort a\n\n┌→─────────────┐\n│66 44 33 22 11│\n└~─────────────┘\n\n\n\n\ntsort ← (⊂∘⍒)⌷⊢  ⍝ h/t Rory Kemp\n\n\ntsort a\n\n┌→─────────────┐\n│66 44 33 22 11│\n└~─────────────┘\n\n\n\n\n\ndyadic ⍒ (Dyadic Grade Down)\n\na ← 'abcdefgabcdefg'\n\n\nb ← 'cgf' ⍒ a\n\n\na⌷⍨⊂b\n\n┌→─────────────┐\n│abdeabdeffggcc│\n└──────────────┘\n\n\n\n\n\n\n⍋ (Grade Up)\n\nmonadic ⍋ (Grade Up)\n\n⍋ 33 11 44 66 22\n\n┌→────────┐\n│2 5 1 3 4│\n└~────────┘\n\n\n\n\na ← 33 11 44 66 22\n\n\na[⍋a]\n\n┌→─────────────┐\n│11 22 33 44 66│\n└~─────────────┘\n\n\n\n\na⌷⍨⊂⍋a\n\n┌→─────────────┐\n│11 22 33 44 66│\n└~─────────────┘\n\n\n\n\n\ndyadic ⍒ (Dyadic Grade Down)\n\na ← 'abcdefgabcdefg'\nb ← 'cgf' ⍋ a\na⌷⍨⊂b\n\n┌→─────────────┐\n│ccggffabdeabde│\n└──────────────┘"
  },
  {
    "objectID": "05_the_rest.html#rotate-transpose-flip",
    "href": "05_the_rest.html#rotate-transpose-flip",
    "title": "The rest of the glyphs",
    "section": "Rotate / transpose / flip",
    "text": "Rotate / transpose / flip\n\n⌽ (Circle Stile)\n\nmonadic ⌽ (Reverse)\n\n⌽ 'trams'\n\n┌→────┐\n│smart│\n└─────┘\n\n\n\n\n⎕ ← mat ← 3 4 ⍴⍳12\n\n┌→─────────┐\n↓1  2  3  4│\n│5  6  7  8│\n│9 10 11 12│\n└~─────────┘\n\n\n\n\n⌽ mat\n\n┌→─────────┐\n↓ 4  3  2 1│\n│ 8  7  6 5│\n│12 11 10 9│\n└~─────────┘\n\n\n\n\n\ndyadic ⌽ (Rotate)\n\n1 ⌽ 'HatStand'\n\n┌→───────┐\n│atStandH│\n└────────┘\n\n\n\n\n3 ⌽ 'HatStand'\n\n┌→───────┐\n│StandHat│\n└────────┘\n\n\n\n\n¯2 ⌽ 1 2 3 4 5 6\n\n┌→──────────┐\n│5 6 1 2 3 4│\n└~──────────┘\n\n\n\n\n⎕ ← mat ← 3 4 ⍴⍳12\n\n┌→─────────┐\n↓1  2  3  4│\n│5  6  7  8│\n│9 10 11 12│\n└~─────────┘\n\n\n\n\n¯1 ⌽ mat\n\n┌→─────────┐\n↓ 4 1  2  3│\n│ 8 5  6  7│\n│12 9 10 11│\n└~─────────┘\n\n\n\n\n1 ¯1 2 ⌽ mat\n\n┌→─────────┐\n↓ 2  3 4  1│\n│ 8  5 6  7│\n│11 12 9 10│\n└~─────────┘\n\n\n\n\n\n\n⊖ (Circle Bar)\n\nmonadic ⊖ (Reverse First)\n\n⊖ 'trams'\n\n┌→────┐\n│smart│\n└─────┘\n\n\n\n\nmat ← 3 4 ⍴⍳12\n⊖ mat\n\n┌→─────────┐\n↓9 10 11 12│\n│5  6  7  8│\n│1  2  3  4│\n└~─────────┘\n\n\n\n\n\ndyadic ⊖ (Rotate First)\n\n3 ⊖ 'HatStand'\n\n┌→───────┐\n│StandHat│\n└────────┘\n\n\n\n\nmat ← 3 4 ⍴⍳12\n¯1 ⊖ mat\n\n┌→─────────┐\n↓9 10 11 12│\n│1  2  3  4│\n│5  6  7  8│\n└~─────────┘\n\n\n\n\n\n\n⍉ (Circle Bar)\n\nmonadic ⍉ (Transpose)\n\nmat ← 3 4 ⍴⍳12\n⍉ mat\n\n┌→─────┐\n↓1 5  9│\n│2 6 10│\n│3 7 11│\n│4 8 12│\n└~─────┘\n\n\n\n\n⎕←cube ← 2 3 4 ⍴⍳24\n\n┌┌→──────────┐\n↓↓ 1  2  3  4│\n││ 5  6  7  8│\n││ 9 10 11 12│\n││           │\n││13 14 15 16│\n││17 18 19 20│\n││21 22 23 24│\n└└~──────────┘\n\n\n\n\n⍉ cube\n\n┌┌→────┐\n↓↓ 1 13│\n││ 5 17│\n││ 9 21│\n││     │\n││ 2 14│\n││ 6 18│\n││10 22│\n││     │\n││ 3 15│\n││ 7 19│\n││11 23│\n││     │\n││ 4 16│\n││ 8 20│\n││12 24│\n└└~────┘\n\n\n\n\n⍴⍉ cube\n\n┌→────┐\n│4 3 2│\n└~────┘\n\n\n\n\n\ndyadic ⊖ (Rotate First)\n\nmat ← 3 4 ⍴⍳12\n2 1 ⍉ mat\n\n┌→─────┐\n↓1 5  9│\n│2 6 10│\n│3 7 11│\n│4 8 12│\n└~─────┘\n\n\n\n\n1 1 ⍉ mat\n\n┌→─────┐\n│1 6 11│\n└~─────┘\n\n\n\n\n⎕ ← cube ← 2 3 4 ⍴⍳24\n\n┌┌→──────────┐\n↓↓ 1  2  3  4│\n││ 5  6  7  8│\n││ 9 10 11 12│\n││           │\n││13 14 15 16│\n││17 18 19 20│\n││21 22 23 24│\n└└~──────────┘\n\n\n\n\n⍴ 2 1 3 ⍉ cube\n\n┌→────┐\n│3 2 4│\n└~────┘\n\n\n\n\n1 1 1⍉ cube\n\n┌→───┐\n│1 18│\n└~───┘\n\n\n\n\n2 1 1⍉ cube\n\n┌→────┐\n↓ 1 13│\n│ 6 18│\n│11 23│\n└~────┘"
  },
  {
    "objectID": "05_the_rest.html#other-operators",
    "href": "05_the_rest.html#other-operators",
    "title": "The rest of the glyphs",
    "section": "Other operators",
    "text": "Other operators\n\n⌺ (Quad Diamond)\n\nDyadic operator ⌺ (Stencil)\n\n{⊂⍺ ⍵}⌺3 3⊢3 3⍴⍳12\n\n┌→──────────────────────────────────────────────────────────┐\n↓ ┌→──────────────┐  ┌→──────────────┐  ┌→───────────────┐  │\n│ │ ┌→──┐ ┌→────┐ │  │ ┌→──┐ ┌→────┐ │  │ ┌→───┐ ┌→────┐ │  │\n│ │ │1 1│ ↓0 0 0│ │  │ │1 0│ ↓0 0 0│ │  │ │1 ¯1│ ↓0 0 0│ │  │\n│ │ └~──┘ │0 1 2│ │  │ └~──┘ │1 2 3│ │  │ └~───┘ │2 3 0│ │  │\n│ │       │0 4 5│ │  │       │4 5 6│ │  │        │5 6 0│ │  │\n│ │       └~────┘ │  │       └~────┘ │  │        └~────┘ │  │\n│ └∊──────────────┘  └∊──────────────┘  └∊───────────────┘  │\n│ ┌→──────────────┐  ┌→──────────────┐  ┌→───────────────┐  │\n│ │ ┌→──┐ ┌→────┐ │  │ ┌→──┐ ┌→────┐ │  │ ┌→───┐ ┌→────┐ │  │\n│ │ │0 1│ ↓0 1 2│ │  │ │0 0│ ↓1 2 3│ │  │ │0 ¯1│ ↓2 3 0│ │  │\n│ │ └~──┘ │0 4 5│ │  │ └~──┘ │4 5 6│ │  │ └~───┘ │5 6 0│ │  │\n│ │       │0 7 8│ │  │       │7 8 9│ │  │        │8 9 0│ │  │\n│ │       └~────┘ │  │       └~────┘ │  │        └~────┘ │  │\n│ └∊──────────────┘  └∊──────────────┘  └∊───────────────┘  │\n│ ┌→───────────────┐ ┌→───────────────┐ ┌→────────────────┐ │\n│ │ ┌→───┐ ┌→────┐ │ │ ┌→───┐ ┌→────┐ │ │ ┌→────┐ ┌→────┐ │ │\n│ │ │¯1 1│ ↓0 4 5│ │ │ │¯1 0│ ↓4 5 6│ │ │ │¯1 ¯1│ ↓5 6 0│ │ │\n│ │ └~───┘ │0 7 8│ │ │ └~───┘ │7 8 9│ │ │ └~────┘ │8 9 0│ │ │\n│ │        │0 0 0│ │ │        │0 0 0│ │ │         │0 0 0│ │ │\n│ │        └~────┘ │ │        └~────┘ │ │         └~────┘ │ │\n│ └∊───────────────┘ └∊───────────────┘ └∊────────────────┘ │\n└∊──────────────────────────────────────────────────────────┘\n\n\n\n\ns←2 2⍴3 3 2 2    ⍝ 2x2 stride with 3x3 kernel\n({⊂⍵}⌺s)3 4⍴⍳12\n\n┌→────────────────────┐\n↓ ┌→────┐  ┌→────┐    │\n│ ↓0 0 0│  ↓0 0 0│    │\n│ │0 1 2│  │2 3 4│    │\n│ │0 5 6│  │6 7 8│    │\n│ └~────┘  └~────┘    │\n│ ┌→─────┐ ┌→───────┐ │\n│ ↓0 5  6│ ↓ 6  7  8│ │\n│ │0 9 10│ │10 11 12│ │\n│ │0 0  0│ │ 0  0  0│ │\n│ └~─────┘ └~───────┘ │\n└∊────────────────────┘\n\n\n\n\n\n\n@ (At)\n\nDyadic @ (At)\n\n(0@2 4) ⍳6\n\n┌→──────────┐\n│1 0 3 0 5 6│\n└~──────────┘\n\n\n\n\n(3 1@2 4) ⍳6\n\n┌→──────────┐\n│1 3 3 1 5 6│\n└~──────────┘\n\n\n\n\n÷@2 4 ⍳6\n\n┌→───────────────┐\n│1 0.5 3 0.25 5 6│\n└~───────────────┘\n\n\n\n\n10 (×@2 4) ⍳5\n\n┌→──────────┐\n│1 20 3 40 5│\n└~──────────┘\n\n\n\n\n0@(2∘|)⍳6\n\n┌→──────────┐\n│0 2 0 4 0 6│\n└~──────────┘\n\n\n\n\n⌽@(2∘|)⍳6\n\n┌→──────────┐\n│5 2 3 4 1 6│\n└~──────────┘"
  },
  {
    "objectID": "05_the_rest.html#special-non-math-glyphs",
    "href": "05_the_rest.html#special-non-math-glyphs",
    "title": "The rest of the glyphs",
    "section": "Special non-math glyphs",
    "text": "Special non-math glyphs\n\n& (Ampersand)\n\nMonadic & (Spawn)\n& spawns a new thread in which f is applied to its argument(s).\n\n÷&4   ⍝ Reciprocal in background\n\n\n\n\n→ (Branch)\nBranching is superseded by the more modern control structures such as :If … :EndIf.\n\n\n⍞ (Print without CR, or stdin)\nWhen ⍞ is assigned with a vector or a scalar, the array is displayed without the normal ending new-line character.\n\n⍞←'2+2' ⋄ ⍞←'=' ⋄ ⍞←2+2\n\n2+2=4\n\n\n\nWhen ⍞ is referenced, terminal input is expected without any specific prompt, and the response is returned as a character vector (however this doesn’t work in Jupyter).\n\n⎕←j ← 4 6 ⍴ '{     \"a\":1,\"b\":42}     '\n\n┌→─────┐\n↓{     │\n│\"a\":1,│\n│\"b\":42│\n│}     │\n└──────┘\n\n\n\n\n\n⍠ Variant\nUsed to pass options/variants to some system functions, such as JSON convert.\n\n⎕←mat←(⎕JSON⍠('Format' 'M'))j\n\n┌→────────────┐\n↓   ┌⊖┐ ┌⊖┐   │\n│ 0 │ │ │0│ 1 │\n│   └─┘ └~┘   │\n│   ┌→┐       │\n│ 1 │a│ 1   3 │\n│   └─┘       │\n│   ┌→┐       │\n│ 1 │b│ 42  3 │\n│   └─┘       │\n└∊────────────┘\n\n\n\n\n1(⎕JSON⍠('Format' 'M')) mat\n\n┌→─────────────┐\n│{\"a\":1,\"b\":42}│\n└──────────────┘\n\n\n\n\n\n⌶ (I-Beam)\nI-Beam is a monadic operator that provides a range of system related services. WARNING: Although documentation is provided for I-Beam functions, any service provided using I-Beam should be considered as “experimental” and subject to change. As at Aug-2022 services include SVD, probability distributions, and much more.\n\n\n⍎ (Hydrant)\n\nMonadic ⍎ (Execute expression)\n\n⍎ '1+1'\n\n \n2\n \n\n\n\n\nV ← 1 2 3\n⍎ 'V'\n\n┌→────┐\n│1 2 3│\n└~────┘\n\n\n\n\nA← ⍎'1+1 ⋄ 2+2'\n\n \n2\n \n\n\n\n\nA\n\n \n4\n \n\n\n\n\n\nDyadic ⍎ (Execute expression in given namespace)\nX must be a namespace reference or a simple character scalar or vector representing the name of a namespace in which the expression is to be executed.\n\n\n\n⍕ (Thorn)\n\nMonadic ⍕ (Format)\n\n4 5 6  ⍝ These are numbers (see the `~` in bottom left)\n\n┌→────┐\n│4 5 6│\n└~────┘\n\n\n\n\n⍕ 4 5 6  ⍝ These are characters (no `~` in bottom left)\n\n┌→────┐\n│4 5 6│\n└─────┘\n\n\n\n\n\nDyadic ⍕ (Format By Specification)\nField-width and number of decimal places:\n\n6 2 ⍕ 3.125 0.002\n\n┌→───────────┐\n│  3.13  0.00│\n└────────────┘"
  },
  {
    "objectID": "03_operators.html",
    "href": "03_operators.html",
    "title": "Operators and axis",
    "section": "",
    "text": "This post will explore some introductory operators (aka “higher order functions”) in APL."
  },
  {
    "objectID": "03_operators.html#axis",
    "href": "03_operators.html#axis",
    "title": "Operators and axis",
    "section": "Axis",
    "text": "Axis\n\n3 2⍴⍳6\n\n┌→──┐\n↓1 2│\n│3 4│\n│5 6│\n└~──┘\n\n\n\n\n1 4 5 =[1] 3 2⍴⍳6\n\n┌→──┐\n↓1 0│\n│0 1│\n│1 0│\n└~──┘\n\n\n\n\n⎕←mat ← 2 3 ⍴ 10 20 30 40 50 60\n\n┌→───────┐\n↓10 20 30│\n│40 50 60│\n└~───────┘\n\n\n\n\nmat+[1]1 2    ⍝ add along first axis\n\n┌→───────┐\n↓11 21 31│\n│42 52 62│\n└~───────┘"
  },
  {
    "objectID": "03_operators.html#comma-functions",
    "href": "03_operators.html#comma-functions",
    "title": "Operators and axis",
    "section": "Comma functions",
    "text": "Comma functions\n\n, (Comma)\n\nmonadic , (Ravel)\n\n⎕ ← cube ← 2 2 2 ⍴ ⍳8\n\n┌┌→──┐\n↓↓1 2│\n││3 4│\n││   │\n││5 6│\n││7 8│\n└└~──┘\n\n\n\n\n, cube\n\n┌→──────────────┐\n│1 2 3 4 5 6 7 8│\n└~──────────────┘\n\n\n\n\n, (1 2)(1 2)\n\n┌→────────────┐\n│ ┌→──┐ ┌→──┐ │\n│ │1 2│ │1 2│ │\n│ └~──┘ └~──┘ │\n└∊────────────┘\n\n\n\n\n\nmonadic , (Ravel) with axis\n\n'ABC'\n\n┌→──┐\n│ABC│\n└───┘\n\n\n\n\n,[0.5]'ABC'\n\n┌→──┐\n↓ABC│\n└───┘\n\n\n\n\n⍴,[0.5]'ABC'\n\n┌→──┐\n│1 3│\n└~──┘\n\n\n\n\n⎕←M ← 2 3 4 ⍴ ⍳24\n\n┌┌→──────────┐\n↓↓ 1  2  3  4│\n││ 5  6  7  8│\n││ 9 10 11 12│\n││           │\n││13 14 15 16│\n││17 18 19 20│\n││21 22 23 24│\n└└~──────────┘\n\n\n\n\n,[1 2]M\n\n┌→──────────┐\n↓ 1  2  3  4│\n│ 5  6  7  8│\n│ 9 10 11 12│\n│13 14 15 16│\n│17 18 19 20│\n│21 22 23 24│\n└~──────────┘\n\n\n\n\n⍴,[1 2]M\n\n┌→──┐\n│6 4│\n└~──┘\n\n\n\n\n,[2 3]M\n\n┌→──────────────────────────────────┐\n↓ 1  2  3  4  5  6  7  8  9 10 11 12│\n│13 14 15 16 17 18 19 20 21 22 23 24│\n└~──────────────────────────────────┘\n\n\n\n\n⍴,[2 3]M\n\n┌→───┐\n│2 12│\n└~───┘\n\n\n\n\n\ndyadic , (Catenate/Laminate (Join))\n\n1 2 3 , 4 5 6\n\n┌→──────────┐\n│1 2 3 4 5 6│\n└~──────────┘\n\n\n\n\ncube ← 2 2 2 ⍴ ⍳8\ncube , 99\n\n┌┌→─────┐\n↓↓1 2 99│\n││3 4 99│\n││      │\n││5 6 99│\n││7 8 99│\n└└~─────┘\n\n\n\n\n'HEADING',[0.5]'-'\n\n┌→──────┐\n↓HEADING│\n│-------│\n└───────┘\n\n\n\n\n\n\n⍪ (Comma bar)\n\nmonadic ⍪ (Table / Ravel items)\n\n⍪1\n\n┌→┐\n↓1│\n└~┘\n\n\n\n\n⍪5⍴⎕A\n\n┌→┐\n↓A│\n│B│\n│C│\n│D│\n│E│\n└─┘\n\n\n\n\n2 3 4⍴⎕A\n\n┌┌→───┐\n↓↓ABCD│\n││EFGH│\n││IJKL│\n││    │\n││MNOP│\n││QRST│\n││UVWX│\n└└────┘\n\n\n\n\n⍪2 3 4⍴⎕A\n\n┌→───────────┐\n↓ABCDEFGHIJKL│\n│MNOPQRSTUVWX│\n└────────────┘\n\n\n\n\n\ndyadic , (Catenate first)\n\n1 2 3 ⍪ 4 5 6\n\n┌→──────────┐\n│1 2 3 4 5 6│\n└~──────────┘\n\n\n\n\ncube ← 2 2 2 ⍴ ⍳8\ncube ⍪ 99\n\n┌┌→────┐\n↓↓ 1  2│\n││ 3  4│\n││     │\n││ 5  6│\n││ 7  8│\n││     │\n││99 99│\n││99 99│\n└└~────┘"
  },
  {
    "objectID": "03_operators.html#operator-glyphs",
    "href": "03_operators.html#operator-glyphs",
    "title": "Operators and axis",
    "section": "Operator glyphs",
    "text": "Operator glyphs\n\n/ (Slash)\n\nmonadic / (Reduce / N-wise Reduce)\n\nmonadic function (Reduce)\n\n⎕ ← a ← ⍳5\n+/a\n\n┌→────────┐\n│1 2 3 4 5│\n└~────────┘\n\n\n\n  \n15\n  \n\n\n\n\na ← ⍳5\n×/a\n\n   \n120\n   \n\n\n\n\na ← ⍳3\n÷/a\n\n   \n1.5\n   \n\n\n\n\na ← 4 6 2\n⌈/ a\n\n \n6\n \n\n\n\n\na ← 4 6 2\n⌊/ a\n\n \n2\n \n\n\n\n\n×/⍳5\n\n   \n120\n   \n\n\n\n\n!5\n\n   \n120\n   \n\n\n\n\n\ndyadic function (N-wise Reduce)\nWindowed sum with window of 3:\n\n3+/⍳4  ⍝ (1+2+3) (2+3+4)\n\n┌→──┐\n│6 9│\n└~──┘\n\n\n\nWindowed sum with window of 2:\n\n2+/⍳4  ⍝ (1+2) (2+3) (3+4)\n\n┌→────┐\n│3 5 7│\n└~────┘\n\n\n\nMoving average\n\n3÷⍨3+/⍳4\n\n┌→──┐\n│2 3│\n└~──┘\n\n\n\n\n0+/⍳4  ⍝ Identity element for +\n\n┌→────────┐\n│0 0 0 0 0│\n└~────────┘\n\n\n\n\n0×/⍳4  ⍝ Identity element for ×\n\n┌→────────┐\n│1 1 1 1 1│\n└~────────┘\n\n\n\n\n¯2,/⍳4⍝ (2,1) (3,2) (4,3)\n\n┌→──────────────────┐\n│ ┌→──┐ ┌→──┐ ┌→──┐ │\n│ │2 1│ │3 2│ │4 3│ │\n│ └~──┘ └~──┘ └~──┘ │\n└∊──────────────────┘\n\n\n\n\n\n\nAxis (with Monadic Operand)\n\nmat←2 3⍴⍳6\n+/[1]mat\n\n┌→────┐\n│5 7 9│\n└~────┘\n\n\n\n\nmat←2 3⍴⍳6\n+/[2]mat\n\n┌→───┐\n│6 15│\n└~───┘\n\n\n\n\nmat←2 3⍴⍳6\n+/mat\n\n┌→───┐\n│6 15│\n└~───┘\n\n\n\n\n\n\n\\\\ (Slope)\n\nmonadic \\\\ (Scane)\n\na ← ⍳5\n+\\a\n\n┌→──────────┐\n│1 3 6 10 15│\n└~──────────┘\n\n\n\n\na ← ⍳5\n×\\a\n\n┌→───────────┐\n│1 2 6 24 120│\n└~───────────┘\n\n\n\n\n⎕ ← a ← ⍳3\n÷\\a\n\n┌→────┐\n│1 2 3│\n└~────┘\n\n\n\n┌→────────┐\n│1 0.5 1.5│\n└~────────┘\n\n\n\n\n\n\n⌿ (Slash Bar)\n\nmonadic ⌿ (Reduce First)\n\nmat ← 2 3 ⍴ ⍳6\n+/mat\n\n┌→───┐\n│6 15│\n└~───┘\n\n\n\n\nmat ← 2 3 ⍴ ⍳6\n+/[1]mat\n\n┌→────┐\n│5 7 9│\n└~────┘\n\n\n\n\n+⌿mat\n\n┌→────┐\n│5 7 9│\n└~────┘\n\n\n\n\n\n\n⍀ (Slope Bar)\n\nmonadic ⍀ (Scan first)\n\nmat ← 2 3 ⍴ ⍳6\n+⍀mat\n\n1 2 3\n5 7 9\n\n\n\n\n\n\n⍤ (Jot Diaresis)\n\ndyadic ⍤ (Rank)\n\n⎕←cube ← 2 3 4 ⍴ ⍳24\n(+⌿⍤1)cube\n\n┌┌→──────────┐\n↓↓ 1  2  3  4│\n││ 5  6  7  8│\n││ 9 10 11 12│\n││           │\n││13 14 15 16│\n││17 18 19 20│\n││21 22 23 24│\n└└~──────────┘\n\n\n\n┌→───────┐\n↓10 26 42│\n│58 74 90│\n└~───────┘\n\n\n\n\n⎕←mat ← 3 4 ⍴ ⍳12\n+⌿mat\n\n┌→─────────┐\n↓1  2  3  4│\n│5  6  7  8│\n│9 10 11 12│\n└~─────────┘\n\n\n\n┌→──────────┐\n│15 18 21 24│\n└~──────────┘\n\n\n\n\n(+⌿⍤2)cube\n\n┌→──────────┐\n↓15 18 21 24│\n│51 54 57 60│\n└~──────────┘\n\n\n\n\n1 2 3 (+⍤0 1) mat\n\n┌→──────────┐\n↓ 2  3  4  5│\n│ 7  8  9 10│\n│12 13 14 15│\n└~──────────┘\n\n\n\n\n\ndyadic ⍤ (Atop)\n\nf ← *⍤÷\n\n\n*(÷3)\n\n           \n1.395612425\n           \n\n\n\n\nf 3\n\n           \n1.395612425\n           \n\n\n\n\n2 f 3\n\n           \n1.947734041\n           \n\n\n\n\n*2÷3\n\n           \n1.947734041\n           \n\n\n\n\n\n\n∘ (Jot)\n\ndyadic ∘ (Bind)\n\nsqr ← *∘2\n\n\nsqr 3\n\n \n9\n \n\n\n\n\npow2 ← 2∘*\n\n\npow2 3\n\n \n8\n \n\n\n\n\n\ndyadic ∘ (Beside)\n\nf ← *∘÷\n\n\n*(÷3)\n\n           \n1.395612425\n           \n\n\n\n\nf 3\n\n           \n1.395612425\n           \n\n\n\n\n2 f 3\n\n          \n1.25992105\n          \n\n\n\n\n2 * (÷3)\n\n          \n1.25992105\n          \n\n\n\n\n2*÷3\n\n          \n1.25992105\n          \n\n\n\n\n\n\n⍥ (Circle diaresis)\n\ndyadic ⍥ (Over)\n\nf ← *⍥÷\n\n\n*(÷3)\n\n1.395612425\n\n\n\n\nf 3\n\n1.395612425\n\n\n\n\n2 f 3\n\n0.793700526\n\n\n\n\n(÷2)*÷3\n\n0.793700526\n\n\n\n\n10 (÷⍥!) 6   ⍝ P(10,4)\n\n5040\n\n\n\n\n(!10)÷!(10-4)  ⍝ P(10,4)\n\n5040\n\n\n\n\n\n\n⍣ (Star Diaeresis)\n\ndyadic ⍣ (Power operator)\n\nS ← +∘1\n\n\nS 0\n\n \n1\n \n\n\n\n\n(S⍣3) 0\n\n \n3\n \n\n\n\n\nadd ← {(S⍣⍺) ⍵}\n\n\n2 add 3\n\n \n5\n \n\n\n\n\nmult ← {⍺ (add⍣⍵) 0}\n\n\n3 mult 4\n\n  \n12\n  \n\n\n\n\nP ← S⍣¯1\n\n\nP 3\n\n \n2\n \n\n\n\n\n(S⍣¯3) 5\n\n \n2\n \n\n\n\n\nsqr ← *∘2\n\n\n(sqr⍣¯1)9\n\n \n3\n \n\n\n\n\npow ← {⍺ (mult⍣⍵) 1}\n\n\n2 pow 3\n\n \n8\n \n\n\n\n\n1 +∘÷⍣= 1\n\n           \n1.618033989\n           \n\n\n\n\nf ← +∘÷\n\n\n1 f 1\n\n \n2\n \n\n\n\n\n1 f 2\n\n   \n1.5\n   \n\n\n\n\n1 f 1.5\n\n           \n1.666666667\n           \n\n\n\n\n1 (f⍣15) 1\n\n           \n1.618034448\n           \n\n\n\n\n1 (f⍣=) 1\n\n           \n1.618033989"
  },
  {
    "objectID": "03_operators.html#linear-algebra",
    "href": "03_operators.html#linear-algebra",
    "title": "Operators and axis",
    "section": "Linear Algebra",
    "text": "Linear Algebra\n\n. (Dot)\n\nDyadic . (Inner Product)\n\n1 2 3 +.× 4 5 6  ⍝ Dot product\n\n  \n32\n  \n\n\n\n\n3 ∧.= 3 3 3 3  ⍝ All-equal\n\n \n1\n \n\n\n\n\nmat←2 2⍴⍳4\nmat +.× mat   ⍝ matrix product\n\n┌→────┐\n↓ 7 10│\n│15 22│\n└~────┘\n\n\n\n\n1 2 3 ∘.× 4 5 6 7  ⍝ Special case: outer prodct\n\n┌→──────────┐\n↓ 4  5  6  7│\n│ 8 10 12 14│\n│12 15 18 21│\n└~──────────┘\n\n\n\n\n\n\n⌹ (Domino;Quad Divide)\n\nMonadic ⌹ (Matrix Inverse Of)\n\nmat←2 2⍴⍳4\n⎕←inv←⌹ mat\n\n¯2    1\n 1.5 ¯0.5\n\n\n\n\ninv +.× mat  ⍝ Identity\n\n1 0\n0 1\n\n\n\n\n\nDyadic ⌹ (Matrix Division By)\n\n⎕←div←5 6 ⌹ mat\n\n¯4 4.5\n\n\n\n\nmat +.× div\n\n5 6"
  },
  {
    "objectID": "03_operators.html#custom-operators",
    "href": "03_operators.html#custom-operators",
    "title": "Operators and axis",
    "section": "Custom operators",
    "text": "Custom operators\n\nf ← *∘2\n\n\nd ← 0.01\nx ← 3\n((f (x+d)) - f x) ÷ d\n\n    \n6.01\n    \n\n\n\n\nd ← 0.0001\n((f (x+d)) - f x) ÷ d\n\n      \n6.0001\n      \n\n\n\n\ngrad ← {((⍺⍺ ⍺+⍵) - ⍺⍺ ⍺) ÷ ⍵}\n3 f grad 0.01\n\n    \n6.01"
  },
  {
    "objectID": "03_operators.html#diaeresis-and-tilde-diaeresis",
    "href": "03_operators.html#diaeresis-and-tilde-diaeresis",
    "title": "Operators and axis",
    "section": "Diaeresis and Tilde Diaeresis",
    "text": "Diaeresis and Tilde Diaeresis\n\n⍨ (Tilde Diaeresis)\n\ndyadic ⍨ (Commute)\n\n3-2\n\n \n1\n \n\n\n\n\n2-3\n\n  \n¯1\n  \n\n\n\n\n3-⍨2\n\n  \n¯1\n  \n\n\n\n\nv←22 10 22 22 21 10 5 10\nv/⍨≠v\n\n┌→─────────┐\n│22 10 21 5│\n└~─────────┘\n\n\n\n\ngrad ← {⍵ ÷⍨ (⍺⍺ ⍺+⍵) - ⍺⍺ ⍺}\n3 f grad 0.01\n\n    \n6.01\n    \n\n\n\n\npow ← ×⍨\npow 3\n\n \n9\n \n\n\n\n\n\ndyadic ⍨ (Constant)\n\nzero ← 0⍨\n2 zero 5\n\n \n0\n \n\n\n\n\n\n\n¨ (Diaresis)\n\nmonadic ¨ (Each)\n\n⎕ ← a ← (1 2 3 4)(5 6 7)\n\n┌→──────────────────┐\n│ ┌→──────┐ ┌→────┐ │\n│ │1 2 3 4│ │5 6 7│ │\n│ └~──────┘ └~────┘ │\n└∊──────────────────┘\n\n\n\n\n+/¨a\n\n┌→────┐\n│10 18│\n└~────┘\n\n\n\n\n⎕ ← b ← (1 2 3)(4 5 6)\n\n┌→────────────────┐\n│ ┌→────┐ ┌→────┐ │\n│ │1 2 3│ │4 5 6│ │\n│ └~────┘ └~────┘ │\n└∊────────────────┘\n\n\n\n\n2 3 +¨ b\n\n┌→────────────────┐\n│ ┌→────┐ ┌→────┐ │\n│ │3 4 5│ │7 8 9│ │\n│ └~────┘ └~────┘ │\n└∊────────────────┘"
  },
  {
    "objectID": "python.html",
    "href": "python.html",
    "title": "Python equivalents",
    "section": "",
    "text": "def add1(x): return x+1\nadd1(3)\n\n4\n\n\nA function that returns a function:\n\ndef logargs(f):\n    \"Print arguments to `f` before calling it\"\n    def _inner(*args, **kwargs):\n        print(f\"Received: {args=}; {kwargs=}\")\n        return f(*args, **kwargs)\n    return _inner\n\nUsing logargs to modify a function:\n\ndef _mult2(x): return x*2\nmult2 = logargs(_mult2)\nmult2(3)\n\nReceived: args=(3,); kwargs={}\n\n\n6\n\n\nExactly the same thing but using a decorator as syntax sugar:\n\n@logargs\ndef mult2(x): return x*2\nmult2(3)\n\nReceived: args=(3,); kwargs={}\n\n\n6\n\n\nA class that takes a function and returns a function:\n\nclass logargs:\n    def __init__(self, prefix='Received: '): self.prefix=prefix\n    def __call__(self, f):        \n        def _inner(*args, **kwargs):\n            print(f\"{self.prefix}{args=}; {kwargs=}\")\n            return f(*args, **kwargs)\n        return _inner\n\nHere’s how to use it:\n\ndef _add1(x): return x+1\no = logargs('Logging: ')\nadd1 = o(_add1)\nadd1(3)\n\nLogging: args=(3,); kwargs={}\n\n\n4\n\n\nExactly the same thing but using a decorator as syntax sugar:\n\n@logargs('Logging: ')\ndef add1(x): return x+1\nadd1(3)\n\nLogging: args=(3,); kwargs={}\n\n\n4"
  },
  {
    "objectID": "python.html#partial",
    "href": "python.html#partial",
    "title": "Python equivalents",
    "section": "partial",
    "text": "partial\n\nfrom functools import partial\n\n\ndef pow(x,y): return x**y\npow(3,2)\n\n9\n\n\n\nsquared = partial(pow, y=2)\nsquared(3)\n\n9"
  },
  {
    "objectID": "02_functions.html",
    "href": "02_functions.html",
    "title": "First functions",
    "section": "",
    "text": "]box on -style=max -trains=tree -fns=on\n\n┌→─────────────────────────────────────┐\n│Was ON -style=max -trains=tree -fns=on│\n└──────────────────────────────────────┘"
  },
  {
    "objectID": "02_functions.html#boolean",
    "href": "02_functions.html#boolean",
    "title": "First functions",
    "section": "Boolean",
    "text": "Boolean\n\n= (Equal sign)\n\ndyadic = (Equal to)\n\n1 = 1\n\n \n1\n \n\n\n\n\n1 = 1 2\n\n┌→──┐\n│1 0│\n└~──┘\n\n\n\n\n1 = 1 1\n\n┌→──┐\n│1 1│\n└~──┘\n\n\n\n\n'Banana' = 'aaaaaa'\n\n┌→──────────┐\n│0 1 0 1 0 1│\n└~──────────┘\n\n\n\n\n'Banana' = 'a'\n\n┌→──────────┐\n│0 1 0 1 0 1│\n└~──────────┘\n\n\n\n\n'Banana' 'Apple' 'Candy' = 'a'\n\n┌→──────────────────────────────────────┐\n│ ┌→──────────┐ ┌→────────┐ ┌→────────┐ │\n│ │0 1 0 1 0 1│ │0 0 0 0 0│ │0 1 0 0 0│ │\n│ └~──────────┘ └~────────┘ └~────────┘ │\n└∊──────────────────────────────────────┘\n\n\n\n\n\n\n≠ (Not equal)\n\nmonadic ≠ (Unique Mask)\n\n≠22 10 22 22 21 10 5 10\n\n┌→──────────────┐\n│1 1 0 0 1 0 1 0│\n└~──────────────┘\n\n\n\n\n≠ 'Banana'\n\n┌→──────────┐\n│1 1 1 0 0 0│\n└~──────────┘\n\n\n\n\n≠ 'Mississippi'\n\n┌→────────────────────┐\n│1 1 1 0 0 0 0 0 1 0 0│\n└~────────────────────┘\n\n\n\n\n\ndyadic ≠ (Not Equal To)\n\n1 2 3 ≠ 4 2 ¯1\n\n┌→────┐\n│1 0 1│\n└~────┘\n\n\n\n\n7 ≠ '7'\n\n \n1\n \n\n\n\n\n\n\n< (Less than sign)\n\ndyadic < (Less than)\n\n1 2 3 < 4 2 ¯1\n\n┌→────┐\n│1 0 0│\n└~────┘\n\n\n\n\n1 2 3 < 2\n\n┌→────┐\n│1 0 0│\n└~────┘\n\n\n\n\n\n\n> (Greater than sign)\n\ndyadic > (Greater than)\n\n1 2 3 > 4 2 ¯1\n\n┌→────┐\n│0 0 1│\n└~────┘\n\n\n\n\n1 2 3 > 2\n\n┌→────┐\n│0 0 1│\n└~────┘\n\n\n\n\n\n\n≤ (Less than or equal to sign)\n\ndyadic ≤ (Less than or equal to)\n\n1 2 3 ≤ 4 2 ¯1\n\n┌→────┐\n│1 1 0│\n└~────┘\n\n\n\n\n1 2 3 ≤ 2\n\n┌→────┐\n│1 1 0│\n└~────┘\n\n\n\n\n\n\n≥ (Greater than or equal to sign)\n\ndyadic ≥ (Greater than or equal to)\n\n1 2 3 ≥ 4 2 ¯1\n\n┌→────┐\n│0 1 1│\n└~────┘\n\n\n\n\n1 2 3 ≥ 2\n\n┌→────┐\n│0 1 1│\n└~────┘\n\n\n\n\n\n\n≡ (Equal underbar)\n\nmonadic ≡ (Depth)\n\n≡ 7\n\n \n0\n \n\n\n\n\n≡ 'abc'\n\n \n1\n \n\n\n\n\n(1 2)(3 4)\n\n┌→────────────┐\n│ ┌→──┐ ┌→──┐ │\n│ │1 2│ │3 4│ │\n│ └~──┘ └~──┘ │\n└∊────────────┘\n\n\n\n\n≡ (1 2)(3 4)\n\n \n2\n \n\n\n\n\n(1 2)(3 4)5\n\n┌→──────────────┐\n│ ┌→──┐ ┌→──┐   │\n│ │1 2│ │3 4│ 5 │\n│ └~──┘ └~──┘   │\n└∊──────────────┘\n\n\n\n\n≡ (1 2)(3 4)5\n\n  \n¯2\n  \n\n\n\n\n\ndyadic ≡ (Match)\n\n1 ≡ 1\n\n \n1\n \n\n\n\n\n1 ≡ 0\n\n \n0\n \n\n\n\n\n1 ≡ 1 1\n\n \n0\n \n\n\n\n\n\n\n≢ (Equal Underbar Slash)\n\nmonadic ≢ (Tally)\n\n≢ 1 2 3\n\n \n3\n \n\n\n\n\n⍴ 1 2 3\n\n┌→┐\n│3│\n└~┘\n\n\n\n\n≢ 2 3 ⍴ ⍳6\n\n \n2\n \n\n\n\n\n\ndyadic ≢ (Not match)\n\n1 ≢ 1\n\n \n0\n \n\n\n\n\n1 ≢ 0\n\n \n1\n \n\n\n\n\n1 ≢ 1 1\n\n \n1\n \n\n\n\n\n1 (=⍤0 1) 1 1\n\n┌→──┐\n│1 1│\n└~──┘\n\n\n\n\n\n\n∨ (Logical or)\n\ndyadic ∨ (Greatest Common Divisor (Or))\n\n0 1 0 1 ∨ 0 0 1 1  ⍝ Truth table for *or*\n\n┌→──────┐\n│0 1 1 1│\n└~──────┘\n\n\n\n\n15 1 2 7 ∨ 35 1 4 0  ⍝ GCD\n\n┌→──────┐\n│5 1 2 7│\n└~──────┘\n\n\n\n\n\n\n⍱ (Logical NOR)\n\ndyadic ⍱ (Nor)\n\n0 1 0 1 ⍱ 0 0 1 1  ⍝ Truth table for *nor*\n\n┌→──────┐\n│1 0 0 0│\n└~──────┘\n\n\n\n\n\n\n∧ (Logical AND)\n\ndyadic ∧ (Lowest Common Multiple (And))\n\n0 1 0 1 ∧ 0 0 1 1  ⍝ Truth table for *and*\n\n┌→──────┐\n│0 0 0 1│\n└~──────┘\n\n\n\n\n15 1 2 7 ∧ 35 1 4 0  ⍝ LCM\n\n┌→────────┐\n│105 1 4 0│\n└~────────┘\n\n\n\n\n\n\n⍲ (Logical NAND)\n\ndyadic ⍲ (Nand)\n\n0 1 0 1 ⍲ 0 0 1 1  ⍝ Truth table for *nand*\n\n┌→──────┐\n│1 1 1 0│\n└~──────┘\n\n\n\n\n\n\n~ (Logical NOT)\n\nmonadic ~ (Not)\n\n~ 0 1  ⍝ Truth table for *not*\n\n┌→──┐\n│1 0│\n└~──┘\n\n\n\n\n\ndyadic ~ (Without;Excluding)\n\n3 1 4 1 5 ~ 5 1\n\n┌→──┐\n│3 4│\n└~──┘\n\n\n\n\n'aa' 'bb' 'cc' 'bb'  ~ 'bb' 'xx'\n\n┌→──────────┐\n│ ┌→─┐ ┌→─┐ │\n│ │aa│ │cc│ │\n│ └──┘ └──┘ │\n└∊──────────┘\n\n\n\n\n(1 2) 3 ~ ⊂1 2\n\n┌→┐\n│3│\n└~┘\n\n\n\n\n\n\n/ (Slash)\n\nmonadic / (Replicate)\n\nv←22 10 22 22 21 10 5 10\n≠v\n\n┌→──────────────┐\n│1 1 0 0 1 0 1 0│\n└~──────────────┘\n\n\n\n\n(≠v)/v\n\n┌→─────────┐\n│22 10 21 5│\n└~─────────┘\n\n\n\n\n3 1 3 1 3 1 / 'Banana'\n\n┌→───────────┐\n│BBBannnannna│\n└────────────┘"
  },
  {
    "objectID": "02_functions.html#min-max-index-concat",
    "href": "02_functions.html#min-max-index-concat",
    "title": "First functions",
    "section": "Min, max, index, concat",
    "text": "Min, max, index, concat\n\n⍳ (iota)\n\nmonadic ⍳ (index generator)\n\n⍳4\n\n┌→──────┐\n│1 2 3 4│\n└~──────┘\n\n\n\n\n⍳2 3\n\n┌→──────────────────┐\n↓ ┌→──┐ ┌→──┐ ┌→──┐ │\n│ │1 1│ │1 2│ │1 3│ │\n│ └~──┘ └~──┘ └~──┘ │\n│ ┌→──┐ ┌→──┐ ┌→──┐ │\n│ │2 1│ │2 2│ │2 3│ │\n│ └~──┘ └~──┘ └~──┘ │\n└∊──────────────────┘\n\n\n\n\n2 3 ⍴ ⍳6\n\n┌→────┐\n↓1 2 3│\n│4 5 6│\n└~────┘\n\n\n\n\n1+2×⍳6\n\n┌→────────────┐\n│3 5 7 9 11 13│\n└~────────────┘\n\n\n\n\n⍳0\n\n┌⊖┐\n│0│\n└~┘\n\n\n\n\n\ndyadic ⍳ (index of)\n\n1 3 6 5 4 ⍳ 3\n\n \n2\n \n\n\n\n\n'ABCDABCDEF' ⍳ 'ACFG'\n\n┌→────────┐\n│1 3 10 11│\n└~────────┘\n\n\n\n\n⎕←mat←3 2 ⍴ ⍳6\n\n┌→──┐\n↓1 2│\n│3 4│\n│5 6│\n└~──┘\n\n\n\n\nmat←3 2 ⍴ ⍳6\nmat ⍳ 5 6\n\n \n3\n \n\n\n\n\n\n\n⍸ (iota underbar)\n\nmonadic ⍸ (Where)\n\n⍸ 1 0 0 1 1\n\n1 4 5\n\n\n\n\n⍸ 2 0 0 2 1\n\n1 1 4 4 5\n\n\n\n\n⎕←bmat ← 2 3 ⍴ 0 1 0 1 0 1\n⍸ bmat\n\n0 1 0\n1 0 1\n\n\n\n┌───┬───┬───┐\n│1 2│2 1│2 3│\n└───┴───┴───┘\n\n\n\n\n\ndyadic ⍸ (Interval Index)\n\n2 4 6 ⍸ 1 2 3 4 5 6 7\n\n0 1 1 2 2 3 3\n\n\n\n\n'AEIOU' ⍸ 'DYALOG'\n\n1 5 1 3 4 2\n\n\n\n\n⎕←mat←3 2⍴⍳6\n\n1 2\n3 4\n5 6\n\n\n\n\nmat ⍸ 3 3\n\n1\n\n\n\n\nmat ⍸ 3 5\n\n2\n\n\n\n\nmat ⍸ 2 2 ⍴ 3 3 3 5\n\n1 2\n\n\n\n\n\n\n⌈ (Upstile)\n\nmonadic ⌈ (Ceiling)\n\n⌈ 3.4 ¯3.4 3 0\n\n┌→───────┐\n│4 ¯3 3 0│\n└~───────┘\n\n\n\n\n\ndyadic ⌈ (Maximum)\n\n3⌈2\n\n \n3\n \n\n\n\n\n3 2⌈2 3\n\n┌→──┐\n│3 3│\n└~──┘\n\n\n\n\n4 ⌈ 6 ⌈ 2\n\n \n6\n \n\n\n\n\na ← ¯4 6 2\n0 ⌈ a\n\n┌→────┐\n│0 6 2│\n└~────┘\n\n\n\n\n\n\n⌊ (Downstile)\n\nmonadic ⌊ (Floor)\n\n⌊ 3.4 ¯3.4 3 0\n\n┌→───────┐\n│3 ¯4 3 0│\n└~───────┘\n\n\n\n\n\ndyadic ⌊ (Minimum)\n\n4 ⌊ 6 ⌊ 2\n\n \n2"
  },
  {
    "objectID": "04_competition.html",
    "href": "04_competition.html",
    "title": "APL Competition 2022",
    "section": "",
    "text": "This notebook covers useful glyphs and concepts useful for the 2022 Dyalog APL competition. Be sure to read the Basics and Operators notebooks first."
  },
  {
    "objectID": "04_competition.html#glpyhs",
    "href": "04_competition.html#glpyhs",
    "title": "APL Competition 2022",
    "section": "Glpyhs",
    "text": "Glpyhs\n\n↑ (Up arrow)\n\nmonadic ↑ (Mix)\n\n'Hip' 'Hop'\n\n┌→────────────┐\n│ ┌→──┐ ┌→──┐ │\n│ │Hip│ │Hop│ │\n│ └───┘ └───┘ │\n└∊────────────┘\n\n\n\n\n↑ 'Hip' 'Hop'\n\n┌→──┐\n↓Hip│\n│Hop│\n└───┘\n\n\n\n\n⍴↑ 'Hip' 'Hop'\n\n┌→──┐\n│2 3│\n└~──┘\n\n\n\n\n↑ (6 4) 5 3\n\n┌→──┐\n↓6 4│\n│5 0│\n│3 0│\n└~──┘\n\n\n\n\n↑(1 2) 3 (4 5 6)\n\n┌→────┐\n↓1 2 0│\n│3 0 0│\n│4 5 6│\n└~────┘\n\n\n\n\n\ndyadic ↑ (Take)\n\n4 ↑ 'Pineapple'\n\n┌→───┐\n│Pine│\n└────┘\n\n\n\n\n12 ↑ 'Pineapple'\n\n┌→───────────┐\n│Pineapple   │\n└────────────┘\n\n\n\n\n¯5 ↑ 'Pineapple'\n\n┌→────┐\n│apple│\n└─────┘\n\n\n\n\n⎕←mat←3 4⍴⍳12\n\n┌→─────────┐\n↓1  2  3  4│\n│5  6  7  8│\n│9 10 11 12│\n└~─────────┘\n\n\n\n\n2 ↑ mat\n\n┌→──────┐\n↓1 2 3 4│\n│5 6 7 8│\n└~──────┘\n\n\n\n\n2 ¯3 ↑ mat\n\n┌→────┐\n↓2 3 4│\n│6 7 8│\n└~────┘\n\n\n\n\n5 ↑ mat\n\n┌→─────────┐\n↓1  2  3  4│\n│5  6  7  8│\n│9 10 11 12│\n│0  0  0  0│\n│0  0  0  0│\n└~─────────┘\n\n\n\n\n\n\n↓ (Down arrow)\n\nmonadic ↑ (Mix)\n\n⎕←mat←3 4⍴⍳12\n\n┌→─────────┐\n↓1  2  3  4│\n│5  6  7  8│\n│9 10 11 12│\n└~─────────┘\n\n\n\n\n↓mat\n\n┌→─────────────────────────────────┐\n│ ┌→──────┐ ┌→──────┐ ┌→─────────┐ │\n│ │1 2 3 4│ │5 6 7 8│ │9 10 11 12│ │\n│ └~──────┘ └~──────┘ └~─────────┘ │\n└∊─────────────────────────────────┘\n\n\n\n\n\ndyadic ↓ (Drop)\n\n4 ↓ 'Pineapple'\n\n┌→────┐\n│apple│\n└─────┘\n\n\n\n\n12 ↓ 'Pineapple'\n\n┌⊖┐\n│ │\n└─┘\n\n\n\n\n¯5 ↓ 'Pineapple'\n\n┌→───┐\n│Pine│\n└────┘\n\n\n\n\n⎕←mat←3 4⍴⍳12\n\n┌→─────────┐\n↓1  2  3  4│\n│5  6  7  8│\n│9 10 11 12│\n└~─────────┘\n\n\n\n\n2 ↓ mat\n\n┌→─────────┐\n↓9 10 11 12│\n└~─────────┘\n\n\n\n\n2 ¯3 ↓ mat\n\n┌→┐\n↓9│\n└~┘\n\n\n\n\n\n\n⌸ (Quad equal)\n\nmonadic ⌸ (Key operator)\n\na ← 'banana'\n\n\na ,⌸ ⍳6\n\n┌→──────┐\n↓b 1    │\n│a 2 4 6│\n│n 3 5  │\n└+──────┘\n\n\n\n\n,⌸ a\n\n┌→──────┐\n↓b 1    │\n│a 2 4 6│\n│n 3 5  │\n└+──────┘\n\n\n\n\na {⍺,+/⍵}⌸ ⍳6\n\n┌→───┐\n↓b  1│\n│a 12│\n│n  8│\n└+───┘\n\n\n\n\n\n\n⊂ (Left shoe)\n\nmonadic ⊂ (Enclose)\n\n1 2 3\n\n┌→────┐\n│1 2 3│\n└~────┘\n\n\n\n\n⍴1 2 3\n\n┌→┐\n│3│\n└~┘\n\n\n\n\n⊂1 2 3\n\n┌─────────┐\n│ ┌→────┐ │\n│ │1 2 3│ │\n│ └~────┘ │\n└∊────────┘\n\n\n\n\n⍴⊂1 2 3\n\n┌⊖┐\n│0│\n└~┘\n\n\n\n\n1(2 3)\n\n┌→────────┐\n│   ┌→──┐ │\n│ 1 │2 3│ │\n│   └~──┘ │\n└∊────────┘\n\n\n\n\n⍴ 1(2 3)\n\n┌→┐\n│2│\n└~┘\n\n\n\n\n1,⊂2 3\n\n┌→────────┐\n│   ┌→──┐ │\n│ 1 │2 3│ │\n│   └~──┘ │\n└∊────────┘\n\n\n\n\n⊂ 1(2 3)\n\n┌─────────────┐\n│ ┌→────────┐ │\n│ │   ┌→──┐ │ │\n│ │ 1 │2 3│ │ │\n│ │   └~──┘ │ │\n│ └∊────────┘ │\n└∊────────────┘\n\n\n\n\n⍴⊂ 1(2 3)\n\n┌⊖┐\n│0│\n└~┘\n\n\n\n\n⊂⊂ 1(2 3)\n\n┌─────────────────┐\n│ ┌─────────────┐ │\n│ │ ┌→────────┐ │ │\n│ │ │   ┌→──┐ │ │ │\n│ │ │ 1 │2 3│ │ │ │\n│ │ │   └~──┘ │ │ │\n│ │ └∊────────┘ │ │\n│ └∊────────────┘ │\n└∊────────────────┘\n\n\n\n\n⊂1\n\n \n1\n \n\n\n\nThis adds 4 5 6 to each element of the LHS (1, 2, and 3):\n\n1 2 3+⊂4 5 6\n\n┌→────────────────────────┐\n│ ┌→────┐ ┌→────┐ ┌→────┐ │\n│ │5 6 7│ │6 7 8│ │7 8 9│ │\n│ └~────┘ └~────┘ └~────┘ │\n└∊────────────────────────┘\n\n\n\nIt’s basically the same idea as this, since (⊂ 4 5 6) and 1 are both scalars:\n\n1 2 3+1\n\n┌→────┐\n│2 3 4│\n└~────┘\n\n\n\n\n\ndyadic ⊂ (Partitioned enclose)\n\n1 0 1 0 0 0 0⊂'HiEarth'\n\n┌→─────────────┐\n│ ┌→─┐ ┌→────┐ │\n│ │Hi│ │Earth│ │\n│ └──┘ └─────┘ │\n└∊─────────────┘\n\n\n\n\n2 0 3 0 0 0 0⊂'HiEarth'\n\n┌→─────────────────────────┐\n│ ┌⊖┐ ┌→─┐ ┌⊖┐ ┌⊖┐ ┌→────┐ │\n│ │ │ │Hi│ │ │ │ │ │Earth│ │\n│ └─┘ └──┘ └─┘ └─┘ └─────┘ │\n└∊─────────────────────────┘\n\n\n\n\n\n\n⊆ (Left shoe underbar)\n\nmonadic ⊆ (Nest)\n\n(⊆1) ≡ ⊂1\n\n \n1\n \n\n\n\n\n(⊆1 2 3) ≡ ⊂1 2 3\n\n \n1\n \n\n\n\n\n⊆1 (1 2 3)\n\n┌→──────────┐\n│   ┌→────┐ │\n│ 1 │1 2 3│ │\n│   └~────┘ │\n└∊──────────┘\n\n\n\n\n⊂ 1 (1 2 3)\n\n┌───────────────┐\n│ ┌→──────────┐ │\n│ │   ┌→────┐ │ │\n│ │ 1 │1 2 3│ │ │\n│ │   └~────┘ │ │\n│ └∊──────────┘ │\n└∊──────────────┘\n\n\n\n\n\ndyadic ⊆ (Partition)\n\n1 1 2 2 2 2 2⊆'HiEarth'\n\n┌→─────────────┐\n│ ┌→─┐ ┌→────┐ │\n│ │Hi│ │Earth│ │\n│ └──┘ └─────┘ │\n└∊─────────────┘\n\n\n\n\n1 1 2 2 2 0 0⊆'HiEarth'\n\n┌→───────────┐\n│ ┌→─┐ ┌→──┐ │\n│ │Hi│ │Ear│ │\n│ └──┘ └───┘ │\n└∊───────────┘\n\n\n\n\n1 1 1 0 1 1 1 0 1 1 1 1⊆'How are you?'\n\n┌→───────────────────┐\n│ ┌→──┐ ┌→──┐ ┌→───┐ │\n│ │How│ │are│ │you?│ │\n│ └───┘ └───┘ └────┘ │\n└∊───────────────────┘\n\n\n\n\n\n\n⊃ (Right shoe)\n\nmonadic ⊃ (Disclose;First)\n\na←1 2\n\n\n⊂a\n\n┌───────┐\n│ ┌→──┐ │\n│ │1 2│ │\n│ └~──┘ │\n└∊──────┘\n\n\n\n\na ≡ ⊃⊂1 2\n\n \n1\n \n\n\n\n\n⊃ 'Word'\n\n \nW\n-\n\n\n\n\n⊃ (1 2)(3 4 5)\n\n┌→──┐\n│1 2│\n└~──┘\n\n\n\n\n\ndyadic ⊃ (Pick)\n\n3 ⊃ 'Word'\n\n \nr\n-\n\n\n\n\n2 ⊃ (1 2)(3 4 5)\n\n┌→────┐\n│3 4 5│\n└~────┘\n\n\n\n\n2 1 ⊃ (1 2)(3 4 5)\n\n \n3\n \n\n\n\n\n⎕←mat ← 2 3⍴⍳6\n\n┌→────┐\n↓1 2 3│\n│4 5 6│\n└~────┘\n\n\n\n\n(⊂2 1) ⊃ 2 3⍴⍳6\n\n \n4\n \n\n\n\n\nG←2 3⍴('ABC' 1)('DEF' 2)('GHI' 3)('JKL' 4),('MNO' 5)('PQR' 6)\nG\n\n┌→────────────────────────────────────┐\n↓ ┌→────────┐ ┌→────────┐ ┌→────────┐ │\n│ │ ┌→──┐   │ │ ┌→──┐   │ │ ┌→──┐   │ │\n│ │ │ABC│ 1 │ │ │DEF│ 2 │ │ │GHI│ 3 │ │\n│ │ └───┘   │ │ └───┘   │ │ └───┘   │ │\n│ └∊────────┘ └∊────────┘ └∊────────┘ │\n│ ┌→────────┐ ┌→────────┐ ┌→────────┐ │\n│ │ ┌→──┐   │ │ ┌→──┐   │ │ ┌→──┐   │ │\n│ │ │JKL│ 4 │ │ │MNO│ 5 │ │ │PQR│ 6 │ │\n│ │ └───┘   │ │ └───┘   │ │ └───┘   │ │\n│ └∊────────┘ └∊────────┘ └∊────────┘ │\n└∊────────────────────────────────────┘\n\n\n\n\n((⊂2 1),1) ⊃ G\n\n┌→──┐\n│JKL│\n└───┘\n\n\n\n\n\n\n⊢ (Right tack)\n\nmonadic ⊢ (Same)\n\n⊢1\n\n \n1\n \n\n\n\n\n⊢'abc'\n\n┌→──┐\n│abc│\n└───┘\n\n\n\n\n\ndyadic ⊢ (Right)\n\n'abc'⊢1\n\n \n1\n \n\n\n\n\n1⊢'abc'\n\n┌→──┐\n│abc│\n└───┘\n\n\n\n\n\n\n⊣ (Left tack)\n\nmonadic ⊣ (Same)\n\n⊣'abc'\n\n┌→──┐\n│abc│\n└───┘\n\n\n\n\n\ndyadic ⊣ (Left)\n\n'abc'⊣1\n\n┌→──┐\n│abc│\n└───┘\n\n\n\n\n1⊣'abc'\n\n \n1\n \n\n\n\n\n\n\n⊥ (Up tack)\n\ndyadic ⊥ (Decode)\n\n2 2 2 2 ⊥ 1 1 0 1   ⍝ binary decode\n\n  \n13\n  \n\n\n\n\n⍝ mixed radix: conversion of hours,\n⍝ minutes and seconds to seconds:\n24 60 60 ⊥ 2 46 40\n\n     \n10000\n     \n\n\n\n\n(2×60×60) + (46×60) + 40\n\n     \n10000\n     \n\n\n\n\n2 ⊥ 1 1 0 1   ⍝ binary decode\n\n  \n13\n  \n\n\n\n\n10 ⊥ 1 1 0 1   ⍝ decimal decode\n\n    \n1101\n    \n\n\n\n\n10 ⊥ 3 4 1 6   ⍝ decimal decode\n\n    \n3416\n    \n\n\n\n\n1j1⊥1 2 3 4\n\n   \n5J9\n   \n\n\n\n\n⍝ 1⊥ is sum over the first axis (+⌿)\n1⊥3 1 4 1 5 9\n\n  \n23\n  \n\n\n\n\n⎕←M←3 4⍴⍳12\n\n┌→─────────┐\n↓1  2  3  4│\n│5  6  7  8│\n│9 10 11 12│\n└~─────────┘\n\n\n\n\n1⊥M\n\n┌→──────────┐\n│15 18 21 24│\n└~──────────┘\n\n\n\n\n\n\n⊤ (Down tack)\n\ndyadic ⊤ Encode)\n\n10 10 10 10 10 ⊤ 3658   ⍝ decimal encode\n\n┌→────────┐\n│0 3 6 5 8│\n└~────────┘\n\n\n\n\n10 10 10 ⊤ 3658   ⍝ truncated decimal encode\n\n┌→────┐\n│6 5 8│\n└~────┘\n\n\n\n\n0 10 10 ⊤ 3658\n\n┌→─────┐\n│36 5 8│\n└~─────┘\n\n\n\n\n2 2 2 2 ⊤ 7   ⍝ binary encode\n\n┌→──────┐\n│0 1 1 1│\n└~──────┘\n\n\n\n\n2 2 ⊤ 7   ⍝ truncated binary encode\n\n┌→──┐\n│1 1│\n└~──┘\n\n\n\n\n2 2 2 2 ⊤ 5 7 12   ⍝ binary encode\n\n┌→────┐\n↓0 0 1│\n│1 1 1│\n│0 1 0│\n│1 1 0│\n└~────┘\n\n\n\n\n⍝ mixed radix: encode of 10000 seconds\n⍝ to hours, minutes and seconds:\n24 60 60 ⊤ 10000\n\n┌→──────┐\n│2 46 40│\n└~──────┘"
  },
  {
    "objectID": "04_competition.html#forks",
    "href": "04_competition.html#forks",
    "title": "APL Competition 2022",
    "section": "Forks",
    "text": "Forks\nIn traditional mathematical notation (TMN): (f+g)(x)=f(x)+g(x). Forks (3-trains) are just a generalisation of this pattern to all functions (though the middle one has to be dyadic).\n\n(÷3)+(*3)\n\n           \n20.41887026\n           \n\n\n\n\n(÷+*)3\n\n           \n20.41887026\n           \n\n\n\n\n(+/÷≢) 2 5 8 9\n\n \n6\n \n\n\n\n\nmean ← +/÷≢\n\n\nmean 2 5 8 9\n\n \n6\n \n\n\n\nFor a dyadic fork, each of f and g are passed the LHS and the RHS:\n\n' '≠'How are you?'\n\n┌→──────────────────────┐\n│1 1 1 0 1 1 1 0 1 1 1 1│\n└~──────────────────────┘\n\n\n\n\n' '⊢'How are you?'\n\n┌→───────────┐\n│How are you?│\n└────────────┘\n\n\n\n\n(' '≠'How are you?') ⊆ (' '⊢'How are you?')\n\n┌→───────────────────┐\n│ ┌→──┐ ┌→──┐ ┌→───┐ │\n│ │How│ │are│ │you?│ │\n│ └───┘ └───┘ └────┘ │\n└∊───────────────────┘\n\n\n\n\n' '(≠⊆⊢)'How are you?'\n\n┌→───────────────────┐\n│ ┌→──┐ ┌→──┐ ┌→───┐ │\n│ │How│ │are│ │you?│ │\n│ └───┘ └───┘ └────┘ │\n└∊───────────────────┘\n\n\n\n\nsplit ← {(⍺≠⍵) ⊆ (⍺⊢⍵)}\n\n\n' ' split 'How are you?'\n\n┌→───────────────────┐\n│ ┌→──┐ ┌→──┐ ┌→───┐ │\n│ │How│ │are│ │you?│ │\n│ └───┘ └───┘ └────┘ │\n└∊───────────────────┘"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "APL Study Group",
    "section": "",
    "text": "You’ll find here a walkthru of what will eventually be all the glyphs in Dyalog APL, in an order where no glyph is used in an example until it’s been introduced. So far there’s no prose – the explanations are purely through examples for now (but we’ll add prose later).\nThere’s also a Python equivalents notebook, which has explanations using python of some APL ideas, including bind/partial and APL operators (aka higher-order functions)."
  },
  {
    "objectID": "01_APL.html",
    "href": "01_APL.html",
    "title": "Basics",
    "section": "",
    "text": "This series will explore all the different glyphs in Dyalog APL. Wherever possible examples of a glyph will exist for each glyph that do not use other glyphs. The purpose of this post is to create documentation for glyphs that are helpful for beginners getting started.\nTo get help on a glpyh, such as ≠, type:\nTo get more detailed “pictures” of arrays and tacit functions type:\nThis first notebook in the series covers the basic objects."
  },
  {
    "objectID": "01_APL.html#some-objects",
    "href": "01_APL.html#some-objects",
    "title": "Basics",
    "section": "Some objects",
    "text": "Some objects\n\nReal\n\n1\n\n┌→─────────────────────────────────────┐\n│Was ON -style=max -trains=tree -fns=on│\n└──────────────────────────────────────┘\n\n\n\n \n1\n \n\n\n\n\n¯1\n\n  \n¯1\n  \n\n\n\n\n1.5\n\n   \n1.5\n   \n\n\n\n\n\nComplex\n\n0j4\n\n   \n0J4\n   \n\n\n\n\n3j4\n\n   \n3J4\n   \n\n\n\n3j4 means 3+4i.\n\n4j0\n\n \n4\n \n\n\n\n\n¯5j¯6\n\n     \n¯5J¯6\n     \n\n\n\n\n\nRank-1 arrays\n\n2 3 1\n\n┌→────┐\n│2 3 1│\n└~────┘\n\n\n\n\n2 ¯3 1\n\n┌→─────┐\n│2 ¯3 1│\n└~─────┘\n\n\n\n\n0j4 ¯5j¯6\n\n┌→────────┐\n│0J4 ¯5J¯6│\n└~────────┘\n\n\n\n\n\nArrays in arrays\n\n1 2 3 4 (1 2)\n\n┌→──────────────┐\n│         ┌→──┐ │\n│ 1 2 3 4 │1 2│ │\n│         └~──┘ │\n└∊──────────────┘\n\n\n\n\n(1 2)(3 4)\n\n┌→────────────┐\n│ ┌→──┐ ┌→──┐ │\n│ │1 2│ │3 4│ │\n│ └~──┘ └~──┘ │\n└∊────────────┘\n\n\n\n\n(1 2)(3 4)5\n\n┌→──────────────┐\n│ ┌→──┐ ┌→──┐   │\n│ │1 2│ │3 4│ 5 │\n│ └~──┘ └~──┘   │\n└∊──────────────┘\n\n\n\n\n\n⍝ (Comment)\n\n⍝ This is a comment and doesn't do anything\n1 2 3 ⍝ This is a comment after some code\n\n┌→────┐\n│1 2 3│\n└~────┘"
  },
  {
    "objectID": "01_APL.html#basic-math-functions",
    "href": "01_APL.html#basic-math-functions",
    "title": "Basics",
    "section": "Basic math functions",
    "text": "Basic math functions\n\n- (Minus sign; Bar)\n\nMonadic - (Negate)\n\n- 4\n\n  \n¯4\n  \n\n\n\n\n- ¯4\n\n \n4\n \n\n\n\n\n- 4 2 0 ¯3 ¯5\n\n┌→──────────┐\n│¯4 ¯2 0 3 5│\n└~──────────┘\n\n\n\n\n¯4 2 0 ¯3 ¯5\n\n┌→───────────┐\n│¯4 2 0 ¯3 ¯5│\n└~───────────┘\n\n\n\n\n\nDyadic - (Minus; subtract)\n\n3-2\n\n \n1\n \n\n\n\n\n3 2 1 - 4 5 1\n\n┌→──────┐\n│¯1 ¯3 0│\n└~──────┘\n\n\n\n\n3 2 1 - 1\n\n┌→────┐\n│2 1 0│\n└~────┘\n\n\n\n\n1 - 3 2 1\n\n┌→──────┐\n│¯2 ¯1 0│\n└~──────┘\n\n\n\n\n\n\n+ (Plus sign)\n\nMonadic + (Conjugate)\n\n+ 1.2\n\n   \n1.2\n   \n\n\n\n\n+ ¯5j¯6\n\n    \n¯5J6\n    \n\n\n\n\n+ 1.2 0j4 ¯5j¯6\n\n┌→────────────┐\n│1.2 0J¯4 ¯5J6│\n└~────────────┘\n\n\n\n\n\nDyadic + (Plus)\n\n3+2\n\n \n5\n \n\n\n\n\n3 2 1 + 4 5 1\n\n┌→────┐\n│7 7 2│\n└~────┘\n\n\n\n\n3 2 1 + 1\n\n┌→────┐\n│4 3 2│\n└~────┘\n\n\n\n\n1 + 3 2 1\n\n┌→────┐\n│4 3 2│\n└~────┘\n\n\n\n\n\n\n| (Stile;Vertical Bar)\n\nMonadic | (Magnitude)\n\n|3 ¯3 3j4\n\n┌→────┐\n│3 3 5│\n└~────┘\n\n\n\n3j4 means 3+4i, which has a magnitude of 5 (because (3×3)+(4×4)=(5×5)).\n\n\nDyadic | (Residue;Modulus)\n\n2 10 2 | 7 13 8\n\n┌→────┐\n│1 3 0│\n└~────┘\n\n\n\n\n2 10 ¯2.5 | 7 ¯13 8\n\n┌→─────┐\n│1 7 ¯2│\n└~─────┘\n\n\n\n\n\n\n÷ (Divide sign)\n\nMonadic ÷ (Reciprocol)\n\n÷ 3 ¯2 3j4\n\n┌→───────────────────────────┐\n│0.3333333333 ¯0.5 0.12J¯0.16│\n└~───────────────────────────┘\n\n\n\n\n\nDyadic ÷ (Divided by)\n\n3÷2\n\n   \n1.5\n   \n\n\n\n\n3÷2 2.5 ¯1\n\n┌→─────────┐\n│1.5 1.2 ¯3│\n└~─────────┘\n\n\n\n\n3 2 1÷2 2.5 ¯1\n\n┌→─────────┐\n│1.5 0.8 ¯1│\n└~─────────┘\n\n\n\n\n\n\n× (Times sign)\n\nMonadic × (Direction)\n\n× 3.1 ¯2 0 3j4\n\n┌→─────────────┐\n│1 ¯1 0 0.6J0.8│\n└~─────────────┘\n\n\n\n\n3j4÷(|3j4)\n\n       \n0.6J0.8\n       \n\n\n\n\n÷∘|⍨3j4\n\n       \n0.6J0.8\n       \n\n\n\n\n÷∘|⍨\n\n   ⍨\n ┌─┘\n ∘\n┌┴┐\n÷ |\n\n\n\n\nmean 3 4 5 1 7\n\nVALUE ERROR: Undefined name: mean\n      mean 3 4 5 1 7\n      ∧\n\n\n0.6j0.8 represents a vector in the same direction as 3j4, but with a magnitude of 5, since it’s 3j4÷5.\n\n\nDyadic × (Times)\n\n3×2\n\n \n6\n \n\n\n\n\n3×2 2.5 ¯1\n\n┌→───────┐\n│6 7.5 ¯3│\n└~───────┘\n\n\n\n\n3 2 1×2 2.5 ¯1\n\n┌→─────┐\n│6 5 ¯1│\n└~─────┘\n\n\n\n\n\n\n* (Star)\n\nMonadic * (Exponential)\n\n* 0 1 2\n\n┌→────────────────────────┐\n│1 2.718281828 7.389056099│\n└~────────────────────────┘\n\n\n\n\n\nDyadic * (Power)\n\n49 5 ¯4 * 0.5 2 0.5\n\n┌→───────┐\n│7 25 0J2│\n└~───────┘\n\n\n\n\n\n\n! (Exclamation mark)\n\nMonadic ! (factorial)\n\n!5\n\n   \n120\n   \n\n\n\n\n!1.5  ⍝ gamma(1.5+1)\n\n           \n1.329340388\n           \n\n\n\n\n\nDyadic ! (Binomial)\nBinomial can be defined using factorial: X!Y ←→ (!Y)÷(!X)×!Y-X. R is the number of selections of X things from Y things.\n\n0 1 2 3 4 5 ! 5\n\n┌→────────────┐\n│1 5 10 10 5 1│\n└~────────────┘\n\n\n\n\n\n\n? (Question mark)\n\nMonadic ? (Roll)\n\n? 6 6 6 6 6\n\n┌→────────┐\n│4 3 4 2 1│\n└~────────┘\n\n\n\n\n? 0 0\n\n┌→────────────────────────┐\n│0.5456603511 0.3390443517│\n└~────────────────────────┘\n\n\n\n\n\nDyadic ? (Deal)\n\n13 ? 52\n\n┌→──────────────────────────────────┐\n│51 50 26 10 40 4 34 2 38 8 27 42 44│\n└~──────────────────────────────────┘\n\n\n\n\n\n\n○ (Circle)\n\nMonadic ○ (Pi Times)\n\n○ 0 1 2\n\n┌→────────────────────────┐\n│0 3.141592654 6.283185307│\n└~────────────────────────┘\n\n\n\n\n\nDyadic ○ (Circular Function - Trig)\nFor table of stuff ᴏ can do, see the docs. The LHS defines what function is returned. E.g 1 gives Sine ⍵, and and 2 is Cos.\n\n0 1 ○ 0\n\n┌→──┐\n│1 0│\n└~──┘\n\n\n\n\n\n\n⍟ (Logarithm; Circle Star)\n\nMonadic ⍟ (Natural Log)\n\n⍟ 1 2 3 (*1)\n\n┌→───────────────────────────┐\n│0 0.6931471806 1.098612289 1│\n└~───────────────────────────┘\n\n\n\n\n\nDyadic ⍟ (Log)\n\n2 10 ⍟ 32 1000\n\n┌→──┐\n│5 3│\n└~──┘"
  },
  {
    "objectID": "01_APL.html#expressions",
    "href": "01_APL.html#expressions",
    "title": "Basics",
    "section": "Expressions",
    "text": "Expressions\n\nPrecedence\n\n3×2+1\n\n \n9\n \n\n\n\n\n1 2 3×2+1\n\n┌→────┐\n│3 6 9│\n└~────┘\n\n\n\n\n1 2 3×2+2 4 6\n\n┌→──────┐\n│4 12 24│\n└~──────┘\n\n\n\n\n3 ¯5 + 4\n\n┌→───┐\n│7 ¯1│\n└~───┘\n\n\n\n\n8*÷3\n\n \n2\n \n\n\n\n\n\nAssignment\n\na←3\na\n\n \n3\n \n\n\n\n\n⎕←a←3\n\n \n3\n \n\n\n\n\nb←3 4\nb\n\n┌→──┐\n│3 4│\n└~──┘\n\n\n\n\n\nFunctions\n\n{⍵×2} 4\n\n \n8\n \n\n\n\n\nf ← {⍵×2}\nf 4\n\n \n8\n \n\n\n\n\ng ← {⍵×2+⍺}\n3 g 4\n\n  \n20\n  \n\n\n\n\nf ← {⍵×2}\nh ← {2 + f ⍵}\nh 4\n\n  \n10\n  \n\n\n\n\n⋄ (Statement separator)\n\nf ← {a ← ⍵×2 ⋄ 2 + a}\nf 4\n\n  \n10\n  \n\n\n\n\nf←{a←1 ⋄ 2 ⋄ 3}  ⍝ First non-assignment is the result of the function\nf 2\n\n \n2\n \n\n\n\n\n\nGuard expressions\n\nfact←{⍵≤1:1 ⋄ ⍵×fact ⍵-1 }\n\n\nfact 1\n\n \n1\n \n\n\n\n\nfact 5\n\n   \n120\n   \n\n\n\n\n\n∇ Del/Nabla (Recursion)\n\n{⍵≤1:1 ⋄ ⍵×∇ ⍵-1} 5\n\n   \n120\n   \n\n\n\n\nfact ← {⍵≤1:1 ⋄ ⍵×∇ ⍵-1}\n\n\nfact 5\n\n   \n120\n   \n\n\n\n\n\n\nDestructuring assignment\n\na b ← 3 4\na\n\n \n3"
  },
  {
    "objectID": "01_APL.html#array-rank",
    "href": "01_APL.html#array-rank",
    "title": "Basics",
    "section": "Array rank",
    "text": "Array rank\n\n⍴ (rho)\n\nDyadic ⍴ (reshape)\n\n⎕ ← 1 2 3 4 5 6\n\n┌→──────────┐\n│1 2 3 4 5 6│\n└~──────────┘\n\n\n\n\na ← 1 2 3 4 5 6\n⎕←mat←2 3 ⍴ a\n\n┌→────┐\n↓1 2 3│\n│4 5 6│\n└~────┘\n\n\n\n\na ← 1 2 3 4 5 6\n3 2 ⍴ a\n\n┌→──┐\n↓1 2│\n│3 4│\n│5 6│\n└~──┘\n\n\n\n\na ← 1 2 3 4 5 6\n1 6 ⍴ a\n\n┌→──────────┐\n↓1 2 3 4 5 6│\n└~──────────┘\n\n\n\n\na ← 1 2 3 4 5 6\n⎕←c←2 2 3 ⍴ a\n\n┌┌→────┐\n↓↓1 2 3│\n││4 5 6│\n││     │\n││1 2 3│\n││4 5 6│\n└└~────┘\n\n\n\n\n2 3 ⍴ 1\n\n┌→────┐\n↓1 1 1│\n│1 1 1│\n└~────┘\n\n\n\n\n\nMonadic ⍴ (shape of)\n\na ← 1 2 3 4 5 6\n⍴a\n\n┌→┐\n│6│\n└~┘\n\n\n\n\nmat←2 3 ⍴ a\n⍴mat\n\n┌→──┐\n│2 3│\n└~──┘\n\n\n\n\n⍴3\n\n┌⊖┐\n│0│\n└~┘\n\n\n\n\n⍬\n\n┌⊖┐\n│0│\n└~┘\n\n\n\n\n⍴⍬\n\n┌→┐\n│0│\n└~┘\n\n\n\n\nmat←2 3 ⍴ a\n⍴⍴mat\n\n┌→┐\n│2│\n└~┘\n\n\n\n\nmat←2 3 ⍴ a\n⍴⍴⍴mat\n\n┌→┐\n│1│\n└~┘\n\n\n\n\nc←2 2 3 ⍴ a\n⍴c\n\n┌→────┐\n│2 2 3│\n└~────┘\n\n\n\n\nc←2 2 3 ⍴ a\n⍴⍴⍴c\n\n┌→┐\n│1│\n└~┘"
  },
  {
    "objectID": "01_APL.html#strings-characters-and-character-vectors",
    "href": "01_APL.html#strings-characters-and-character-vectors",
    "title": "Basics",
    "section": "Strings (characters and character vectors)",
    "text": "Strings (characters and character vectors)\n\n'ACF'\n\n┌→──┐\n│ACF│\n└───┘\n\n\n\n\n'A' 'C' 'F'\n\n┌→──┐\n│ACF│\n└───┘\n\n\n\n\n⍴'y'\n\n┌⊖┐\n│0│\n└~┘\n\n\n\n\n⍴'your boat'\n\n┌→┐\n│9│\n└~┘\n\n\n\n\n1 2 3 4 'a'\n\n┌→────────┐\n│1 2 3 4 a│\n└+────────┘\n\n\n\n\n1 2 3 4 'ab'\n\n┌→─────────────┐\n│         ┌→─┐ │\n│ 1 2 3 4 │ab│ │\n│         └──┘ │\n└∊─────────────┘\n\n\n\n\n(1 2)(3 4)'ab'\n\n┌→─────────────────┐\n│ ┌→──┐ ┌→──┐ ┌→─┐ │\n│ │1 2│ │3 4│ │ab│ │\n│ └~──┘ └~──┘ └──┘ │\n└∊─────────────────┘\n\n\n\n\n⎕A\n\n┌→─────────────────────────┐\n│ABCDEFGHIJKLMNOPQRSTUVWXYZ│\n└──────────────────────────┘"
  }
]